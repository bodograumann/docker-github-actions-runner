name: GitHub Actions Runner in Docker - Base
on:
  push:
    paths:
      - Dockerfile.base
      - .github/workflows/base.yml
      - tests/**
      - go.*
    branches:
      - master
      - develop
  schedule:
    - cron:  '0 22 * * *'

jobs:
  ubuntu_base_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [jammy, focal, noble]
        platform: [linux/amd64, linux/arm64]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy Dockerfile
        run: cp Dockerfile.base Dockerfile.base.ubuntu-${{ matrix.release }}; sed -i.bak 's/FROM.*/FROM ubuntu:${{ matrix.release }}/' Dockerfile.base.ubuntu-${{ matrix.release }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install dependencies
        run: |
          go get github.com/testcontainers/testcontainers-go@v0.33.0
      - name: Get current Git SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: set testable image environment variable
        id: testvars
        run: echo "GH_RUNNER_IMAGE=ubuntu-${{ matrix.release }}-${{ env.GIT_SHA }}-${{ matrix.platform }}" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base.ubuntu-${{ matrix.release }}
          pull: true
          push: false
          load: true
          tags: ${{ env.ORG }}/github-runner-base:ubuntu-${{ matrix.release }},${{ env.GH_RUNNER_IMAGE }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run go tests
        run: go test ./tests/...

  debian_base_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [bookworm, sid]
        platform: [linux/amd64, linux/arm64]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy Dockerfile
        run: cp Dockerfile.base Dockerfile.base.debian-${{ matrix.release }}; sed -i.bak 's/FROM.*/FROM debian:${{ matrix.release }}/' Dockerfile.base.debian-${{ matrix.release }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install dependencies
        run: |
          go get github.com/testcontainers/testcontainers-go@v0.33.0
      - name: Get current Git SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: set testable image environment variable
        id: testvars
        run: echo "GH_RUNNER_IMAGE=debian-${{ matrix.release }}-${{ env.GIT_SHA }}-${{ matrix.platform }}" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base.debian-${{ matrix.release }}
          pull: true
          push: false
          load: true
          tags: ${{ env.ORG }}/github-runner-base:debian-${{ matrix.release }},${{ env.GH_RUNNER_IMAGE }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run go tests
        run: go test ./tests/...
  ubuntu_base_latest_deploy:
    runs-on: ubuntu-latest
    needs: ubuntu_base_tests
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base
          pull: true
          push: true
          tags: ${{ env.ORG }}/github-runner-base:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ubuntu_base_deploy:
    runs-on: ubuntu-latest
    needs: ubuntu_base_tests
    strategy:
      matrix:
        release: [jammy, focal, noble]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy Dockerfile
        run: cp Dockerfile.base Dockerfile.base.ubuntu-${{ matrix.release }}; sed -i.bak 's/FROM.*/FROM ubuntu:${{ matrix.release }}/' Dockerfile.base.ubuntu-${{ matrix.release }}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base.ubuntu-${{ matrix.release }}
          pull: true
          push: true
          tags: ${{ env.ORG }}/github-runner-base:ubuntu-${{ matrix.release }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  debian_base_deploy:
    runs-on: ubuntu-latest
    needs: debian_base_tests
    strategy:
      matrix:
        release: [bookworm, sid]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy Dockerfile
        run: cp Dockerfile.base Dockerfile.base.debian-${{ matrix.release }}; sed -i.bak 's/FROM.*/FROM debian:${{ matrix.release }}/' Dockerfile.base.debian-${{ matrix.release }}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base.debian-${{ matrix.release }}
          pull: true
          push: true
          tags: ${{ env.ORG }}/github-runner-base:debian-${{ matrix.release }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
