on:
  pull_request:

name: "Trigger: Push action"

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

  ubuntu_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [jammy, focal, noble]
        platform: [amd64, arm64]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install dependencies
        run: |
          go get github.com/testcontainers/testcontainers-go@v0.33.0
      - name: Get current Git SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: set testable image environment variable
        id: testvars
        run: echo "GH_RUNNER_IMAGE=ubuntu-${{ matrix.release }}-${{ env.GIT_SHA }}-${{ matrix.platform }}" >> $GITHUB_ENV
      - name: Combine Dockerfile
        run: |
          cp Dockerfile.base Dockerfile.final.ubuntu-${{ matrix.release }};
          sed -i.bak 's/FROM.*/FROM ubuntu:${{ matrix.release }}/' Dockerfile.final.ubuntu-${{ matrix.release }}

          # Combine the dockerfiles
          cp Dockerfile Dockerfile.ubuntu-${{ matrix.release }}
          cat Dockerfile.ubuntu-${{ matrix.release }} | sed "s/^FROM.*//" >>Dockerfile.final.ubuntu-${{ matrix.release }}

          # Sanity check
          grep FROM Dockerfile.final.ubuntu-${{ matrix.release }}
      - name: Build final image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.final.ubuntu-${{ matrix.release }}
          pull: true
          push: false
          load: true
          tags: ${{ env.GH_RUNNER_IMAGE }}
          platforms: linux/${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Tests will run against the final `${GH_RUNNER_IMAGE}` laid on top of `base-${GH_RUNNER_IMAGE}`
      - name: Run go tests
        run: go test ./tests/...

  debian_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [bookworm, sid]
        platform: [amd64, arm64]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Install dependencies
        run: |
          go get github.com/testcontainers/testcontainers-go@v0.33.0
      - name: Get current Git SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: set testable image environment variable
        id: testvars
        run: echo "GH_RUNNER_IMAGE=debian-${{ matrix.release }}-${{ env.GIT_SHA }}-${{ matrix.platform }}" >> $GITHUB_ENV
      - name: Combine Dockerfile
        run: |
          cp Dockerfile.base Dockerfile.final.debian-${{ matrix.release }}
          sed -i.bak 's/FROM.*/FROM debian:${{ matrix.release }}/' Dockerfile.final.debian-${{ matrix.release }}

          # Combine the dockerfiles
          cp Dockerfile Dockerfile.debian-${{ matrix.release }}
          cat Dockerfile.debian-${{ matrix.release }} | sed "s/^FROM.*//" >>Dockerfile.final.debian-${{ matrix.release }}

          # Sanity check
          grep FROM Dockerfile.final.debian-${{ matrix.release }}
      - name: Build final image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.final.debian-${{ matrix.release }}
          pull: true
          push: false
          load: true
          tags: ${{ env.GH_RUNNER_IMAGE }}
          platforms: linux/${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Tests will run against the final `${GH_RUNNER_IMAGE}` laid on top of `base-${GH_RUNNER_IMAGE}`
      - name: Run go tests
        run: go test ./tests/...
